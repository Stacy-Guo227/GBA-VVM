#!/bin/csh
# Setup file for RRTMG radiation runs. After executing this script,
# run the makefile.  The final step is to submit the batch job to
# Bassi, which calls the executable rrtm_*.run.
#--------------------------------------------------------------------- 

set echo  # echoes the commands
set expname = wall_periodic

# hardscrabble configuration
set subdir = '../..'

rm -f *.o *.mod

setenv EXPHDR_tmp  ${expname}" "${subdir}
if( ! -d ${subdir} ) then      # if ${subdir} is not found, create it!
  mkdir ${subdir}                
endif

make clobber
#cp ${subdir}/CODE6/z_coord-100.F  ${subdir}/CODE6/z_coord.F
#cp ${subdir}/CODE6/ini_3d_module-tb3.F  ${subdir}/CODE6/ini_3d_module.F
#cp ${subdir}/CODE6/turb_3d_module-tb0.F  ${subdir}/CODE6/turb_3d_module.F

setenv EXPHDR_tmp  ${expname}" "${subdir}"/DATA/"${expname}
if( ! -d ${subdir}"/DATA/"${expname} ) then      # if ${subdir} is not found, create it!
  mkdir ${subdir}"/DATA/"${expname}                
endif

cd ${subdir}"/DATA/"${expname}    

alias rm rm
rm *
#rm -rf RUNDATA

cat > COMMENTS << 'END'
gate shear
'END'
cat COMMENTS

cat > definesld.com << 'END1'
#define MPI
#define PERIODIC
#define PARALLELIO
#define PHYSICS
'END1'
cat definesld.com

# Grid parameter declarations.
# changed from 'cat' to 'sed' - DD 2010.02.09
# added domain decomposition variables, without '#define MPI' must both
#  be 1, total subdomains/processes = product of decomposition variables
#  - DD 2010.04.12
sed -e '1,$s/zonal_dimension/128/' \
    -e '1,$s/merid_dimension/32/' \
    -e '1,$s/zonal_decomposition/8/' \
    -e '1,$s/merid_decomposition/2/' \
    -e '1,$s/vert_dimension/40/' \
    -e '1,$s/tracer_dimension/0/' \
  ../../CODE/cdecks/PARMSLD.F90 > PARMSLD.f90

# For restart --------------------
# INPUT1 NEWRUN=F, ITTGET= 3600
# INPUT4 IFL11=10,IFL12=10 
# For restart --------------------

# input data
cat > INPUT << 'END6'
 &INPUT1 NEWRUN=T, ITTADD=86400 /
 &INPUT2 RLAT=0, RLON=0 /
 &INPUT3 DX=250.,DYNEW=250.,DZ=250.,DZ1=250.,DT=0.1,NOTURB=T,NOSFX=T,NSFLUX=12,ALADV=1.,UVTAU=86400. /
#           (m)          (m)     (m)     (m)    (s)                (time step)
 &INPUT4 NXS=1,NXSAVG=50,NWR11=1,NFLPRT=1,NRESTART=50. /
#         ( case output frequency)   ( result could be seen in ncfile)
 &INPUT5 IX=3182073,ITINIT=0,ITSTOP=0,SCALE=6.,Q1Q2=F,DTRAD=120. /
#                                                              (s)
'END6'
cat INPUT

#-------------------------------------------------------------------

if( ! -d RUNDATA ) then
  mkdir RUNDATA
endif
rm -rf archive
mkdir archive

cp ${subdir}/CODE/make_ctl.sh .
cp ${subdir}/RUNDATA/fort.91 fort.91
cp ${subdir}/RUNDATA/rrtmg_lw.nc RUNDATA/rrtmg_lw.nc
cp ${subdir}/RUNDATA/rrtmg_sw.nc RUNDATA/rrtmg_sw.nc
cp -r ${subdir}/RUNDATA/LSM RUNDATA/LSM
cp ${subdir}/CODE/p3_lookup_table_* .

#cp -rf ${subdir}/RUNDATA/ASTER_GDEM_TWTOPO RUNDATA/ASTER_GDEM_TWTOPO
#cd RUNDATA/ASTER_GDEM_TWTOPO/FORTRAN

#cd ${subdir}"/RUN/t01"
#make topography CASENAME=${expname} -f ../makefile
#cd ${subdir}"/DATA/"${expname}
#cp ${subdir}/RUN/t01/nc2fortranBinary.f .
#./nc2fortranBinary > tmp.out

# GLDAS
#set soil = (SM1 SM2 SM3 SM4 ST1 ST2 ST3 ST4)
#set soil2 = (SOILM0_1lev SOILM0_2lev SOILM0_3lev SOILM0_4lev \
#             SOILT0_1lev SOILT0_2lev SOILT0_3lev SOILT0_4lev)
#@ num = 1
#while($num <= 8)
#sed -e 's/SM1/'$soil[$num]'/g' \
#    -e 's/SOILM0_1lev/'$soil2[$num]'/g' GLDAS_tmp.F > GLDAS.F
#make
#./GLDAS
#@ num = $num + 1
#end
#mv makefile makefile_gldas
#mv makefile_topo makefile

#make
#./nc2fortranBinary

# for LSM
#cd ../${subdir}
#cp ${subdir}/CODE/LSM/GENPARM.TBL .
#cp ${subdir}/CODE/LSM/SOILPARM.TBL .
#cp ${subdir}/CODE/LSM/VEGPARM.TBL .
exit


